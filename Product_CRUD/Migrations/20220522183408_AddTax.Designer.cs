// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Product_CRUD.Models;

namespace Product_CRUD.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220522183408_AddTax")]
    partial class AddTax
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Product_CRUD.Models.Entities.Category", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("CategoryId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            CategoryName = "Drzewka owocowe"
                        },
                        new
                        {
                            Id = (short)2,
                            CategoryName = "Kwiaty"
                        },
                        new
                        {
                            Id = (short)3,
                            CategoryName = "Nasiona warzyw"
                        });
                });

            modelBuilder.Entity("Product_CRUD.Models.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<short>("CategoryId")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("417597a7-369b-4456-9137-32cee1486003"),
                            CategoryId = (short)1,
                            Name = "Wiśnia",
                            Price = 45.7806m
                        },
                        new
                        {
                            Id = new Guid("117c5513-5181-4d1b-bc31-f21969075d9d"),
                            CategoryId = (short)1,
                            Name = "Jabłoń",
                            Price = 16.6911m
                        },
                        new
                        {
                            Id = new Guid("1b2f4fee-05da-4d4a-acb5-67f486001501"),
                            CategoryId = (short)3,
                            Name = "Rzodkiewka",
                            Price = 8.8806m
                        },
                        new
                        {
                            Id = new Guid("34010c87-c339-4f72-85e5-09382369b443"),
                            CategoryId = (short)3,
                            Name = "Marchew",
                            Price = 1.5129m
                        },
                        new
                        {
                            Id = new Guid("3a18b1d3-54c8-470f-b35d-9fcb73a3f296"),
                            CategoryId = (short)2,
                            Name = "Mak",
                            Price = 45.7806m
                        },
                        new
                        {
                            Id = new Guid("6dd95a03-6eb4-42e9-bd46-d4858dc55825"),
                            CategoryId = (short)1,
                            Name = "Śliwka",
                            Price = 43.3329m
                        });
                });

            modelBuilder.Entity("Product_CRUD.Models.Entities.Tax", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint")
                        .HasColumnName("TaxId");

                    b.Property<decimal>("Value")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Taxes");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Value = 1.23m
                        },
                        new
                        {
                            Id = (byte)2,
                            Value = 1.08m
                        },
                        new
                        {
                            Id = (byte)3,
                            Value = 1.05m
                        },
                        new
                        {
                            Id = (byte)4,
                            Value = 1.00m
                        });
                });

            modelBuilder.Entity("Product_CRUD.Models.Entities.Product", b =>
                {
                    b.HasOne("Product_CRUD.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Product_CRUD.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
